apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: ingress-nginx
---
apiVersion: v1
data:
  prometheus.yml: |
    global:
      scrape_interval: 10s
      scrape_timeout: 10s
    scrape_configs:
    - job_name: haproxy-ingress
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - ingress-nginx
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
        regex: haproxy-ingress
        action: keep
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        regex: 10254
        action: keep
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: hostname
    - job_name: haproxy-exporter
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - ingress-nginx
      params:
        scope: [global,frontend,backend]
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
        regex: haproxy-ingress
        action: keep
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        regex: 9105
        action: keep
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: hostname
kind: ConfigMap
metadata:
  name: prometheus-cfg
  namespace: ingress-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: ingress-nginx
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      run: prometheus
  template:
    metadata:
      labels:
        run: prometheus
      name: prometheus
      namespace: ingress-nginx
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        imagePullPolicy: IfNotPresent
        args:
        - --config.file=/etc/prometheus/config/prometheus.yml
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: prometheus-cfg
      serviceAccount: prometheus
      volumes:
      - configMap:
          name: prometheus-cfg
        name: prometheus-cfg
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: ingress-nginx
spec:
  ports:
  - port: 9090
  selector:
    run: prometheus
